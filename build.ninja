cxx = clang++
ar = ar

builddir = build
b = $builddir

cflags = -O3 -g -std=c++23 -Wextra -Wconversion -Wall -pedantic -Werror -I. 
ldflags = -Wl,--gc-sections -Wl,--relax -L$b -lfmt

rule cxx
    command = $cxx -MMD -MF $out.d $cflags -c $in -o $out
    description = C++ $out
    depfile = $out.d

rule link
    command = $cxx $cflags $ldflags -o $out $in $libs
    description = LNK $out

rule ar
    command = $ar rcs $out $in
    description = LIB $out

rule run
    command = $in
    description = RUN $in

rule size
    command = size $in

rule compdb
    command = ninja -t compdb > $out
    generator = true
    description = COMPDB

rule tidy
    command = clang-tidy -p . --quiet --header-filter=.* 1/*.cc
    description = TIDY

build $b/1: link $b/1_main.o $b/1_setup.o
build $b/1_main.o: cxx 1/main.cc
build $b/1_setup.o: cxx 1/setup.cc

build $b/2: link $b/2_main.o $b/2_setup.o
build $b/2_main.o: cxx 2/main.cc
build $b/2_setup.o: cxx 2/setup.cc

build $b/3: link $b/3_main.o $b/utils.a
build $b/3_main.o: cxx 3/main.cc

build $b/4: link $b/4_main.o $b/utils.a
build $b/4_main.o: cxx 4/main.cc

build $b/utils.a: ar $b/read_file.o
build $b/read_file.o: cxx utils/read_file.cc

build compile_commands.json: compdb | build.ninja

